# Ultralytics 🚀 AGPL-3.0 License - https://ultralytics.com/license

# Parameters
nc: 80 # number of classes 目标类别数
depth_multiple: 0.33 # model depth multiple 深度缩放因子 控制每层重复次数
width_multiple: 0.50 # layer channel multiple 宽度缩放因子 控制通道数缩放比例
anchors: #检测框预定义 每层三组 每组包含 3个锚框，每个锚框由 宽度和高度组成。它们是按顺序排列的：[w1, h1, w2, h2, w3, h3]
  - [10, 13, 16, 30, 33, 23] # P3/8
  - [30, 61, 62, 45, 59, 119] # P4/16
  - [116, 90, 156, 198, 373, 326] # P5/32

# YOLOv5 v6.0 backbone
backbone: #骨干网络
#  模块类型：
#  Conv：Conv2d + BN + SiLU
#  C3：YOLOv5 自定义的 C3 模块，内部包含 Bottleneck 残差结构
#  SPPF：改进版的 SPP（空间金字塔池化）模块，能增强感受野
  # [from, number, module, args] from 表示输入来源（-1 是前一层，[x, y] 是多路输入），number 是重复次数（会乘以 depth_multiple）。
  [
    [-1, 1, Conv, [64, 6, 2, 2]], # 0-P1/2  # 0: 初始大卷积，步长=2（缩小尺寸）【】参数分别代表 输出通道数，卷积核大小，步长，padding
    [-1, 1, Conv, [128, 3, 2]], # 1-P2/4 下采样一半（P2/4）
    [-1, 3, C3, [128]],#3个 Bottleneck 模块（残差结构） 3个Bottleneck子模块
    [-1, 1, Conv, [256, 3, 2]], # 3-P3/8
    [-1, 6, C3, [256]],
    [-1, 1, Conv, [512, 3, 2]], # 5-P4/16
    [-1, 9, C3, [512]],
    [-1, 1, Conv, [1024, 3, 2]], # 7-P5/32
    [-1, 3, C3, [1024]],
    [-1, 1, SPPF, [1024, 5]], # 9 空间金字塔池化，提取多尺度上下文信息
  ]

# YOLOv5 v6.0 head 检测头
#检测头部分的主要操作：
#
#利用上采样 + Concat整合不同尺度特征（FPN结构）
#
#在P3、P4、P5分别输出三个检测层（用于检测小、中、大目标）
#
#最终的 Detect 层负责输出类别 + 位置 + 置信度
head: [
  [-1, 1, Conv, [512, 1, 1]],            # 10: 减小通道数
  [-1, 1, nn.Upsample, [None, 2]],       # 11: 上采样（最近邻）
  [[-1, 6], 1, Concat, [1]],             # 12: 与P4特征连接（6是backbone的P4）
  [-1, 3, C3, [512, False]],             # 13: 混合特征（不带shortcut）

  [-1, 1, Conv, [256, 1, 1]],            # 14: 减通道
  [-1, 1, nn.Upsample, [None, 2]],       # 15: 上采样
  [[-1, 4], 1, Concat, [1]],             # 16: 与P3特征连接
  [-1, 3, C3, [256, False]],             # 17: 最浅层的检测分支（P3/8）

  [-1, 1, Conv, [256, 3, 2]],            # 18: 下采样
  [[-1, 14], 1, Concat, [1]],            # 19: 与中层特征连接
  [-1, 3, C3, [512, False]],             # 20: 中层检测分支（P4/16）

  [-1, 1, Conv, [512, 3, 2]],            # 21: 下采样
  [[-1, 10], 1, Concat, [1]],            # 22: 与最深层连接
  [-1, 3, C3, [1024, False]],            # 23: 最深层检测分支（P5/32）

  [[17, 20, 23], 1, Detect, [nc, anchors]] # 最后检测层
]

# [[17, 20, 23], 1, Detect, [nc, anchors]] # 最后检测层
#使用来自层17（P3/8）、20（P4/16）、23（P5/32）的输出
#
#nc 是类别数，anchors 是上面定义的anchor框
#
#每个输出特征图上每个点都预测多个框（每层3个 anchor）
#
#Input
# └── Conv + Down → P1/2
#      └── Conv + Down → P2/4
#           └── Conv + Down → P3/8
#                └── Conv + Down → P4/16
#                     └── Conv + Down → P5/32 → SPPF
#                          ↑        ↑        ↑
#         ↑────────Concat & Upsample from P5
#         ↑───────Concat & Upsample from P4
#         └──────Concat → Detect(P3, P4, P5)
